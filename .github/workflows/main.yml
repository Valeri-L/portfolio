name: CI/CD for Dockerized Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" \
              | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Create Backend .env File
        run: |
          cat <<EOF > backend/.env
          SECRET_KEY=${{ secrets.BACKEND_SECRET_KEY }}
          DEBUG=${{ secrets.DEBUG }}
          LEETCODE_API_URL=${{ secrets.LEETCODE_API_URL }}
          GRAPHQL_QUERY=${{ secrets.GRAPHQL_QUERY }}
          REDIS_LOCATION=${{ secrets.REDIS_LOCATION }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
          CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
          ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
          RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}
          EOF

      - name: Build & push Docker Images
        working-directory: ./  # or wherever your compose file lives
        run: |
          docker compose build
          docker compose push

      - name: Update services on EC2 portfolio server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.Portfolio_EC2_HOST }}
          username: ${{ secrets.Portfolio_EC2_USER }}
          key: ${{ secrets.Portfolio_EC2_KEY }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" \
              | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            cd portfolio_app
            docker system prune -f
            docker compose pull
            docker compose up -d
            docker restart webserver
